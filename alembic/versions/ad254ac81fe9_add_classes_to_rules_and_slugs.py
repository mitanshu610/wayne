"""Add classes to rules and slugs

Revision ID: ad254ac81fe9
Revises: fdbcc4f0efd6
Create Date: 2025-01-23 12:55:02.484841

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ad254ac81fe9'
down_revision: Union[str, None] = 'fdbcc4f0efd6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'plan_rules', ['id'])
    op.create_unique_constraint(None, 'rule_conditions', ['id'])
    op.add_column('rules', sa.Column('rule_slug', sa.String(), nullable=False))
    op.add_column('rules', sa.Column('rule_class_name', sa.String(), nullable=False))
    op.add_column('rules', sa.Column('service_slug', sa.Enum('CEREBRUM', 'REVIEW_PILOT', name='backendservice'), nullable=False))
    op.create_unique_constraint(None, 'rules', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'rules', type_='unique')
    op.drop_column('rules', 'service_slug')
    op.drop_column('rules', 'rule_class_name')
    op.drop_column('rules', 'rule_slug')
    op.drop_constraint(None, 'rule_conditions', type_='unique')
    op.drop_constraint(None, 'plan_rules', type_='unique')
    # ### end Alembic commands ###
