"""Initial tables generation

Revision ID: a25abc5e18c5
Revises: 
Create Date: 2025-01-11 21:22:26.476185

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a25abc5e18c5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('customer_id', sa.UUID(), nullable=True),
    sa.Column('psp_name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('features',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('be_service', sa.Enum('CEREBRUM', 'REVIEW_PILOT', name='backendservice'), nullable=False),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_features_be_service', 'features', ['be_service'], unique=False)
    op.create_index('ix_features_name', 'features', ['name'], unique=False)
    op.create_index('ix_features_slug', 'features', ['slug'], unique=False)
    op.create_table('plans',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('amount', sa.String(length=50), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('billing_cycle', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('razorpay_plan_id', sa.String(), nullable=False),
    sa.Column('is_custom', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_plans_razorpay_plan_id', 'plans', ['razorpay_plan_id'], unique=True)
    op.create_table('request_response_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('request_data', sa.String(), nullable=False),
    sa.Column('response_data', sa.String(), nullable=False),
    sa.Column('reason', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('plan_coupons',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('plan_id', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('discount_type', sa.String(length=50), nullable=False),
    sa.Column('discount_value', sa.Float(), nullable=False),
    sa.Column('usage_limit', sa.Integer(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_index('ix_plan_coupons_is_active', 'plan_coupons', ['is_active'], unique=False)
    op.create_index('ix_plan_coupons_plan_id', 'plan_coupons', ['plan_id'], unique=False)
    op.create_table('plan_features',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('plan_id', sa.UUID(), nullable=False),
    sa.Column('feature_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['feature_id'], ['features.id'], ),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_plan_features_composite', 'plan_features', ['plan_id', 'feature_id'], unique=False)
    op.create_index('ix_plan_features_feature_id', 'plan_features', ['feature_id'], unique=False)
    op.create_index('ix_plan_features_plan_id', 'plan_features', ['plan_id'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('org_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.UUID(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('cancel_at_cycle_end', sa.Boolean(), nullable=False),
    sa.Column('billing_cycle', sa.Enum('MONTHLY', 'QUARTERLY', 'ANNUALLY', name='billingcycle'), nullable=False),
    sa.Column('amount', sa.String(length=50), nullable=False),
    sa.Column('currency', sa.String(length=50), nullable=False),
    sa.Column('psp_name', sa.Enum('STRIPE', 'RAZORPAY', name='pspname'), nullable=False),
    sa.Column('razorpay_subscription_id', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subscriptions_is_active'), 'subscriptions', ['is_active'], unique=False)
    op.create_index(op.f('ix_subscriptions_plan_id'), 'subscriptions', ['plan_id'], unique=False)
    op.create_index(op.f('ix_subscriptions_razorpay_subscription_id'), 'subscriptions', ['razorpay_subscription_id'], unique=False)
    op.create_index(op.f('ix_subscriptions_start_date'), 'subscriptions', ['start_date'], unique=False)
    op.create_index('ix_subscriptions_user_org', 'subscriptions', ['user_id', 'org_id'], unique=False)
    op.create_table('invoices',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('subscription_id', sa.UUID(), nullable=False),
    sa.Column('invoice_date', sa.String(), nullable=False),
    sa.Column('amount', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('subscription_id', sa.UUID(), nullable=False),
    sa.Column('payment_date', sa.Date(), nullable=False),
    sa.Column('amount', sa.String(length=50), nullable=False),
    sa.Column('currency', sa.String(length=50), nullable=False),
    sa.Column('psp_payment_id', sa.String(length=50), nullable=False),
    sa.Column('psp_name', sa.Enum('STRIPE', 'RAZORPAY', name='pspname'), nullable=False),
    sa.Column('status', sa.Enum('CAPTURED', 'FAILED', 'PENDING', name='paymentstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payments_payment_date'), 'payments', ['payment_date'], unique=False)
    op.create_index(op.f('ix_payments_psp_payment_id'), 'payments', ['psp_payment_id'], unique=False)
    op.create_index(op.f('ix_payments_subscription_id'), 'payments', ['subscription_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_payments_subscription_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_psp_payment_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_payment_date'), table_name='payments')
    op.drop_table('payments')
    op.drop_table('invoices')
    op.drop_index('ix_subscriptions_user_org', table_name='subscriptions')
    op.drop_index(op.f('ix_subscriptions_start_date'), table_name='subscriptions')
    op.drop_index(op.f('ix_subscriptions_razorpay_subscription_id'), table_name='subscriptions')
    op.drop_index(op.f('ix_subscriptions_plan_id'), table_name='subscriptions')
    op.drop_index(op.f('ix_subscriptions_is_active'), table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index('ix_plan_features_plan_id', table_name='plan_features')
    op.drop_index('ix_plan_features_feature_id', table_name='plan_features')
    op.drop_index('ix_plan_features_composite', table_name='plan_features')
    op.drop_table('plan_features')
    op.drop_index('ix_plan_coupons_plan_id', table_name='plan_coupons')
    op.drop_index('ix_plan_coupons_is_active', table_name='plan_coupons')
    op.drop_table('plan_coupons')
    op.drop_table('request_response_logs')
    op.drop_index('ix_plans_razorpay_plan_id', table_name='plans')
    op.drop_table('plans')
    op.drop_index('ix_features_slug', table_name='features')
    op.drop_index('ix_features_name', table_name='features')
    op.drop_index('ix_features_be_service', table_name='features')
    op.drop_table('features')
    op.drop_table('customers')
    # ### end Alembic commands ###
